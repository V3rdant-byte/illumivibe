plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.hidetake.ssh' version '2.10.1'
	id 'java'
}

group = 'com.illumivibe'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.google.api-client:google-api-client:1.33.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.0.0'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

tasks.named('test') {
	useJUnitPlatform()
}

/* Continuous Deployment */

bootJar {
	launchScript()
}

ssh.settings {
	dryRun = project.hasProperty('dryRun')
	fileTransfer = 'scp'
}

remotes {
	illumivibe {
		host = 'illumivibe.cf'
		user = 'iv'
		identity = file("illumivibe.pem")
	}
}

task showPlatformVersion {
	doLast {
		println ssh.version
		ssh.run {
			session(remotes.illumivibe) {
				execute 'uname -a'
				execute 'cat /etc/*-release', ignoreError: true
			}
		}
	}
}

task deploy(dependsOn: bootJar) {
	doLast {
		ssh.run {
			session(remotes.illumivibe) {
				put from: bootJar.archiveFile.get().asFile, into: '~/server/'
				execute "~/server/startserver ${bootJar.archiveFileName.get()}"
			}
		}
	}
}

task fetchLog {
	doLast {
		ssh.run {
			session(remotes.illumivibe) {
				execute 'cat ~/server/server.log'
			}
		}
	}
}
